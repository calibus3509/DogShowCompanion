// <auto-generated />
using System;
using DogShowCompanionAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DogShowCompanionAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220525134554_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DogShowCompanionAPI.Models.CivicAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryRegion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkcId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BreedId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("CommonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DogShowClassId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("KennelId")
                        .HasColumnType("int");

                    b.Property<string>("Microchip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BreedId");

                    b.HasIndex("ColorId");

                    b.HasIndex("DogShowClassId");

                    b.HasIndex("GroupId");

                    b.HasIndex("KennelId");

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogBreed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DogBreeds");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DogBreedId")
                        .HasColumnType("int");

                    b.Property<bool>("IsStandard")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DogBreedId");

                    b.ToTable("DogColors");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DogGroup");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogShow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("EntryFee")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("DogShows");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogShowClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BreedId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("DogShowId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JudgeId")
                        .HasColumnType("int");

                    b.Property<int>("RingNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BreedId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DogShowId");

                    b.HasIndex("JudgeId");

                    b.ToTable("DogShowClasses");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogShowClassCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DogShowClassCategories");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogTrait", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DogBreedId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DogBreedId");

                    b.ToTable("DogTraits");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.Kennel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Kennels");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KennelId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("KennelId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.Dog", b =>
                {
                    b.HasOne("DogShowCompanionAPI.Models.DogBreed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId");

                    b.HasOne("DogShowCompanionAPI.Models.DogColor", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("DogShowCompanionAPI.Models.DogShowClass", null)
                        .WithMany("Dogs")
                        .HasForeignKey("DogShowClassId");

                    b.HasOne("DogShowCompanionAPI.Models.DogGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("DogShowCompanionAPI.Models.Kennel", null)
                        .WithMany("Dogs")
                        .HasForeignKey("KennelId");

                    b.Navigation("Breed");

                    b.Navigation("Color");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogColor", b =>
                {
                    b.HasOne("DogShowCompanionAPI.Models.DogBreed", null)
                        .WithMany("Colors")
                        .HasForeignKey("DogBreedId");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogShow", b =>
                {
                    b.HasOne("DogShowCompanionAPI.Models.CivicAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogShowClass", b =>
                {
                    b.HasOne("DogShowCompanionAPI.Models.DogBreed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId");

                    b.HasOne("DogShowCompanionAPI.Models.DogShowClassCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("DogShowCompanionAPI.Models.DogShow", null)
                        .WithMany("Classes")
                        .HasForeignKey("DogShowId");

                    b.HasOne("DogShowCompanionAPI.Models.Person", "Judge")
                        .WithMany()
                        .HasForeignKey("JudgeId");

                    b.Navigation("Breed");

                    b.Navigation("Category");

                    b.Navigation("Judge");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogTrait", b =>
                {
                    b.HasOne("DogShowCompanionAPI.Models.DogBreed", null)
                        .WithMany("Traits")
                        .HasForeignKey("DogBreedId");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.Kennel", b =>
                {
                    b.HasOne("DogShowCompanionAPI.Models.CivicAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.Person", b =>
                {
                    b.HasOne("DogShowCompanionAPI.Models.CivicAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("DogShowCompanionAPI.Models.Kennel", null)
                        .WithMany("Owners")
                        .HasForeignKey("KennelId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogBreed", b =>
                {
                    b.Navigation("Colors");

                    b.Navigation("Traits");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogShow", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.DogShowClass", b =>
                {
                    b.Navigation("Dogs");
                });

            modelBuilder.Entity("DogShowCompanionAPI.Models.Kennel", b =>
                {
                    b.Navigation("Dogs");

                    b.Navigation("Owners");
                });
#pragma warning restore 612, 618
        }
    }
}
